{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","kitty","id","name","email","CardList","kitties","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterdKitties","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAEaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,QACJC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,6BAEL,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,aCPTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,QAAQC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,UCHZM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCHG,E,kDApCb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAhBtD,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IAJH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,QAASkB,S,+BAOpC,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,QAASU,EADV,EACUA,YACXU,EAAiBpB,EAAQqB,QAAO,SAAA1B,GAAK,OACzCA,EAAME,KAAKyB,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAK9B,UAAU,MAAf,UACA,yCACC,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAgBe,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,QAASoB,W,GAhCTI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.deca0aa7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"kitty\"\r\n        src={`https://robohash.org/${props.kitty.id}/?set=set4&size=180x180`}\r\n      />\r\n      <h2>{props.kitty.name}</h2>\r\n      <p>{props.kitty.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\nimport {Card} from '../card/card.component';\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.kitties.map((kitty) => (\r\n        <Card key={kitty.id} kitty={kitty}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport {SearchBox} from './components/search-box/search-box.component';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      kitties: [],\n      searchField: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this); //to work setState properly \n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ kitties: users }));\n  }\n  // //Or make this a arrow function\n  // handleChange(e) {\n  //   this.setState({searchField:e.target.value});\n  // }\n  handleChange = e => this.setState({searchField:e.target.value})\n  render() {\n    const { kitties, searchField } = this.state;\n    const filterdKitties = kitties.filter(kitty => \n      kitty.name.toLowerCase().includes(searchField.toLowerCase())\n    ); \n    return (\n      <div className=\"App\">\n      <h1>Kitties</h1>\n       <SearchBox\n         placeholder='search kitties'\n         handleChange = {this.handleChange}\n       />\n        <CardList kitties={filterdKitties}></CardList>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}